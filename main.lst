MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     title       "LCD"
                      00002     list        p=16f84A
                      00003     radix       hex
                      00004     include "p16f84a.inc"
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00005 
  0000000C            00006 COUNT1  EQU     d'12'
  0000000D            00007 COUNT2  EQU     d'13'
  0000000E            00008 COUNT3  EQU     d'14'
  0000000F            00009 COUNT4  EQU     d'15'
  00000010            00010 COUNT5  EQU     d'16'
  00000011            00011 COUNT6  EQU     d'17'
                      00012 
  00000012            00013 CURSOR_POS  EQU d'18' ; Register stores detail about the cursor's current position. Bits[3:0] specify co
                            lumn number, where as bit 4 specifies the row.
                      00014                       ; Since there are 16 columns and 2 rows, such an encoding is guaranteed to span al
                            l cells on the LCD.
  00000013            00015 CHAR_CODE   EQU d'19'
                      00016 
  00000014            00017 FLAG_REG    EQU d'20' ; Register containing some flags to be used within the program. Structure: [-,-,-,
                            -,-,-,-,Main Menu Flag]
                      00018 
  00000015            00019 ADDITIONAL      EQU d'21' ; "bits [2:0] contains the position of the * in the second scene"
                      00020                       ; "00->6  -- 01->9  -- 10 ->12" 
                      00021 
  00000004            00022 LEFT_BTN    EQU d'4'
  00000005            00023 RIGHT_BTN   EQU d'5'
  00000006            00024 UP_DOWN_BTN EQU d'6'
  00000007            00025 CONFIRM_BTN EQU d'7'
                      00026  
  00000041            00027 LTR_A   EQU b'01000001'
  00000042            00028 LTR_B   EQU b'01000010' 
  00000043            00029 LTR_C   EQU b'01000011' 
  00000044            00030 LTR_D   EQU b'01000100'
  00000045            00031 LTR_E   EQU b'01000101'
  00000046            00032 LTR_F   EQU b'01000110'
  00000047            00033 LTR_G   EQU b'01000111' 
  00000048            00034 LTR_H   EQU b'01001000'
  00000049            00035 LTR_I   EQU b'01001001' 
  0000004A            00036 LTR_J   EQU b'01001010' 
  0000004B            00037 LTR_K   EQU b'01001011'
  0000004C            00038 LTR_L   EQU b'01001100'
  0000004D            00039 LTR_M   EQU b'01001101' 
  0000004E            00040 LTR_N   EQU b'01001110'
  0000004F            00041 LTR_O   EQU b'01001111' 
  00000050            00042 LTR_P   EQU b'01010000' 
  00000051            00043 LTR_Q   EQU b'01010001' 
  00000052            00044 LTR_R   EQU b'01010010'
  00000053            00045 LTR_S   EQU b'01010011'         
  00000054            00046 LTR_T   EQU b'01010100'         
  00000055            00047 LTR_U   EQU b'01010101'         
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  2
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000056            00048 LTR_V   EQU b'01010110'         
  00000057            00049 LTR_W   EQU b'01010111' 
  00000058            00050 LTR_X   EQU b'01011000'         
  00000059            00051 LTR_Y   EQU b'01011001'
  0000005A            00052 LTR_Z   EQU b'01011010'
  00000030            00053 LTR_0   EQU b'00110000'
  00000030            00054 LTR_1   EQU b'00110000'
  00000030            00055 LTR_2   EQU b'00110000'
  00000030            00056 LTR_3   EQU b'00110000'
  00000030            00057 LTR_4   EQU b'00110000'
  00000030            00058 LTR_5   EQU b'00110000'
  00000030            00059 LTR_6   EQU b'00110000'
  00000030            00060 LTR_7   EQU b'00110000'
  00000030            00061 LTR_8   EQU b'00110000'
  00000030            00062 LTR_9   EQU b'00110000'
  0000002A            00063 LTR_ASTERISK    EQU b'00101010'
  000000A0            00064 LTR_SPACE   EQU b'10100000'
                      00065         
0000                  00066         ORG     0x0
0000   2806           00067         GOTO    MAIN
0004                  00068         ORG     0x04
0004   180B           00069         BTFSC   INTCON, d'0'
0005   289E           00070         GOTO RB4_INT
                      00071 
                      00072         
                      00073 ; Register Configurations
0006   0185           00074 MAIN    CLRF    PORTA
0007   1683           00075         BSF     STATUS,RP0
0008   30F0           00076         MOVLW   b'11110000' ; Set   RB[7:4] as inputs, the rest are outputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0009   0086           00077         MOVWF   TRISB
                      00078         
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0185           00079         CLRF    TRISA       ; Set all pins of PORTA as outputs
000B   1283           00080         BCF     STATUS,RP0
                      00081         
000C   3088           00082         MOVLW   b'10001000' ; Properly setup the interrupts. Only GIE and RBIE should be set.
000D   008B           00083         MOVWF   INTCON
                      00084         
                      00085 
000E   300B           00086 INDIRECT        MOVLW   d'11'
000F   008D           00087         MOVWF   COUNT2
0010   3020           00088         MOVLW   H'20'
0011   0084           00089         MOVWF   FSR
0012   0B8D           00090 LOOPX   DECFSZ  COUNT2,F
0013   2815           00091         GOTO LOOPY
0014   2819           00092         GOTO FINISH
0015   080D           00093 LOOPY   MOVF    COUNT2,W
0016   0080           00094         MOVWF   INDF
Message[305]: Using default destination of 1 (file).
0017   0A84           00095         INCF    FSR
0018   2812           00096         GOTO    LOOPX
0019                  00097 FINISH
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  3
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00098 
                      00099 
                      00100 ; Initialize the LCD
0019   20BA           00101 INIT    CALL    DELAYFMS
001A   3002           00102         MOVLW   b'00010'
001B   0085           00103         MOVWF   PORTA
001C   205B           00104         CALL    ET
001D   3002           00105         MOVLW   b'00010'
001E   0085           00106         MOVWF   PORTA
001F   205B           00107         CALL    ET
0020   300A           00108         MOVLW   b'01010'
0021   0085           00109         MOVWF   PORTA
0022   205B           00110         CALL    ET
                      00111         
0023   3000           00112         MOVLW   b'00000'
0024   0085           00113         MOVWF   PORTA
0025   205B           00114         CALL    ET
0026   300C           00115         MOVLW   b'01100'
0027   0085           00116         MOVWF   PORTA
0028   205B           00117         CALL    ET
                      00118         
0029   3000           00119         MOVLW   b'00000'
002A   0085           00120         MOVWF   PORTA
002B   205B           00121         CALL    ET
002C   3001           00122         MOVLW   b'00001'
002D   0085           00123         MOVWF   PORTA
002E   205B           00124         CALL    ET
                      00125 
002F   3000           00126         MOVLW   b'00000'
0030   0085           00127         MOVWF   PORTA
0031   205B           00128         CALL    ET
0032   3006           00129         MOVLW   b'00110'
0033   0085           00130         MOVWF   PORTA
0034   205B           00131         CALL    ET
                      00132 
                      00133                         
0035   3004           00134 WELCOME_SCREEN  MOVLW   b'00000100' ; Move the cursor to 0x04
0036   0092           00135         MOVWF   CURSOR_POS
                      00136 
0037   2083           00137         CALL    PRINT_M
0038   207D           00138         CALL    PRINT_E
0039   2083           00139         CALL    PRINT_M
003A   2086           00140         CALL    PRINT_O
003B   2089           00141         CALL    PRINT_R
003C   208C           00142         CALL    PRINT_Y
                      00143         
003D   300A           00144         MOVLW   b'00001010' ; Move the cursor to 0x0A (Column 10)
003E   0092           00145         MOVWF   CURSOR_POS
                      00146         
003F   2080           00147         CALL    PRINT_G
0040   2077           00148         CALL    PRINT_A
0041   2083           00149         CALL    PRINT_M
0042   207D           00150         CALL    PRINT_E
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  4
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00151         
0043   20AE           00152         CALL    DELAYS  ; TODO: Implement some longer delay (4/5 seconds maybe?)
                      00153 
0044   2054           00154 MAIN_MENU   CALL    CLEAR_SCREEN
0045   2083           00155         CALL    PRINT_M
0046   2086           00156         CALL    PRINT_O
0047   207A           00157         CALL    PRINT_D
0048   207D           00158         CALL    PRINT_E
                      00159         
0049   3002           00160         MOVLW   d'2'   ; Move the cursor two units to the right
004A   0792           00161         ADDWF   CURSOR_POS, 1
                      00162         
004B   208F           00163         CALL    PRINT_ASTERISK
004C   2095           00164         CALL    PRINT_1
                      00165         
004D   3002           00166         MOVLW   d'2'   ; Move the cursor two units to the right
004E   0792           00167         ADDWF   CURSOR_POS, 1
                      00168         
004F   2098           00169         CALL    PRINT_2
                      00170         
0050   3002           00171         MOVLW   d'2'   ; Move the cursor two units to the right
0051   0792           00172         ADDWF   CURSOR_POS, 1
                      00173         
0052   209B           00174         CALL    PRINT_3
                      00175         
                      00176 
0053   2853           00177 INF     GOTO    INF
                      00178         
                      00179         
                      00180 ; ****************************************************************          LCD INTERFACING         ****
                            *******************************************************************
                      00181 
                      00182 ; CLEAR_SCREEN: Erases all characters on the screen and sets the cursor back to row 0, col 0
0054   3000           00183 CLEAR_SCREEN    MOVLW   b'00000'    ; Send to the LCD "00 0000 0001", which is the instruction to clear 
                            the display.
0055   0085           00184         MOVWF   PORTA
0056   205B           00185         CALL ET
                      00186         
0057   3001           00187         MOVLW   b'00001'
0058   0085           00188         MOVWF   PORTA
0059   205B           00189         CALL ET
                      00190         
005A   0008           00191         RETURN
                      00192         
                      00193 ; ET: Writes data to LCD.
005B   1486           00194 ET      BSF     PORTB,1
005C   0000           00195         NOP
005D   1086           00196         BCF     PORTB,1
005E   20BA           00197         CALL DELAYFMS
005F   0008           00198         RETURN 
                      00199 
                      00200         
                      00201 ;   WRITE_CHAR: Automatically writes a character at address specified in CURSOR_POS and increments CURSO
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  5
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            R_POS in anticipation of the next character
                      00202         
0060   0093           00203 WRITE_CHAR      MOVWF   CHAR_CODE   ; In order to save lines, the W register is initially assumed to con
                            tain the character code. Load it into CHAR_CODE register.
0061   1A12           00204         BTFSC   CURSOR_POS,4    ; If line (encoded as bit 4) is not 0, i.e. line is 1 then specify the f
                            irst bit in the address as a 4.
0062   300C           00205         MOVLW   b'01100'
0063   1E12           00206         BTFSS   CURSOR_POS,4            ; If line (encoded as bit 4) is not 1, i.e. line is 0 then speci
                            fy the first bit in the address as a 0.
0064   3008           00207         MOVLW   b'01000'
0065   0085           00208         MOVWF   PORTA
0066   205B           00209         CALL ET
                      00210         
0067   0812           00211         MOVF    CURSOR_POS,0
0068   390F           00212         ANDLW   h'0f'       ; Mask the first 4 bits (which correspond to the column number)
0069   0085           00213         MOVWF   PORTA
006A   205B           00214         CALL ET
                      00215         
                      00216         ;   Handling character code: A character code is an 8-bit number representing a printable charac
                            ter. To print it to the screen, we should mask the upper four
                      00217         ;   bits, shift left 4 times, set the first bit to 1 and write to the LCD. Then, mask the lower 
                            four bits, set the first bit to 1 and write to the LCD.
                      00218         
006B   0E13           00219         SWAPF   CHAR_CODE, 0 ; Move contents of CHAR_CODE to W, swapping the nibbles.
006C   390F           00220         ANDLW   h'0f'        ; Mask the first 4 bits (which are now in the lower bits after swapping)
006D   3E10           00221         ADDLW   h'10'        ; Set the first bit of the W reg (adding 16)
                      00222         
006E   0085           00223         MOVWF   PORTA
006F   205B           00224         CALL ET
                      00225         
0070   0813           00226         MOVF    CHAR_CODE, 0 ; Move contents of CHAR_CODE register to W register
0071   390F           00227         ANDLW   h'0f'        ; Mask the last 4 bits
0072   3E10           00228         ADDLW   h'10'        ; Set the first bit of the W reg (adding 16)
                      00229         
0073   0085           00230         MOVWF   PORTA
0074   205B           00231         CALL ET
0075   0A92           00232         INCF    CURSOR_POS,1    ; Increment the column number, equivalent to moving the cursor to await 
                            the next character.
0076   0008           00233         RETURN
                      00234         
                      00235         
                      00236 ; One-liners to print specific characters (feel free to abuse)
                      00237         
0077   3041           00238 PRINT_A MOVLW   LTR_A
0078   2060           00239         CALL WRITE_CHAR
0079   0008           00240         RETURN
                      00241         
007A   3044           00242 PRINT_D MOVLW   LTR_D
007B   2060           00243         CALL WRITE_CHAR
007C   0008           00244         RETURN
                      00245         
007D   3045           00246 PRINT_E MOVLW   LTR_E
007E   2060           00247         CALL WRITE_CHAR
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  6
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007F   0008           00248         RETURN
                      00249 
0080   3047           00250 PRINT_G MOVLW   LTR_G
0081   2060           00251         CALL WRITE_CHAR
0082   0008           00252         RETURN
                      00253         
0083   304D           00254 PRINT_M MOVLW   LTR_M
0084   2060           00255         CALL WRITE_CHAR
0085   0008           00256         RETURN
                      00257 
0086   304F           00258 PRINT_O MOVLW   LTR_O
0087   2060           00259         CALL WRITE_CHAR
0088   0008           00260         RETURN
                      00261 
0089   3052           00262 PRINT_R MOVLW   LTR_R
008A   2060           00263         CALL WRITE_CHAR
008B   0008           00264         RETURN
                      00265         
008C   304D           00266 PRINT_Y MOVLW   LTR_M
008D   2060           00267         CALL WRITE_CHAR
008E   0008           00268         RETURN
                      00269         
008F   302A           00270 PRINT_ASTERISK  MOVLW   LTR_ASTERISK
0090   2060           00271         CALL WRITE_CHAR
0091   0008           00272         RETURN
                      00273                                          
0092   30A0           00274 PRINT_SPACE     MOVLW   LTR_SPACE        ; "print space in order to erase the char"
0093   2060           00275         CALL WRITE_CHAR
0094   0008           00276         RETURN
                      00277         
0095   3030           00278 PRINT_1 MOVLW   LTR_1
0096   2060           00279         CALL WRITE_CHAR
0097   0008           00280         RETURN
                      00281 
0098   3030           00282 PRINT_2 MOVLW   LTR_2
0099   2060           00283         CALL WRITE_CHAR
009A   0008           00284         RETURN
                      00285         
009B   3030           00286 PRINT_3 MOVLW   LTR_3
009C   2060           00287         CALL WRITE_CHAR
009D   0008           00288         RETURN
                      00289         
                      00290 ; ***********************************************************************   INTERRUPTS      ************
                            **********************************************************
                      00291         
                      00292 ; NOTE: Should all of these be BTFSS?
                      00293         
009E   20BA           00294 RB4_INT CALL    DELAYFMS ;  Debounce
009F   1A06           00295         BTFSC   PORTB,LEFT_BTN
00A0   0000           00296         NOP ; TODO: Implement functionality
00A1   1A86           00297         BTFSC   PORTB,RIGHT_BTN
00A2   0000           00298         NOP ; TODO: Implement functionality
00A3   1B06           00299         BTFSC   PORTB,UP_DOWN_BTN
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  7
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A4   20A9           00300         CALL    HANDLE_UP_DOWN
00A5   1B86           00301         BTFSC   PORTB,CONFIRM_BTN
00A6   0000           00302         NOP ; TODO: Implement functionality
00A7   100B           00303         BCF INTCON, 0
00A8   0009           00304         RETFIE
                      00305         
00A9                  00306 HANDLE_UP_DOWN  ; Unless you're in the Main Menu, toggle the row that the cursor is at
00A9   1814           00307         BTFSC   FLAG_REG, 0 ; Check if the Main Menu flag is set, skip accordingly
00AA   28AD           00308         GOTO    SKIP_HANDLE_UP_DOWN
00AB   3010           00309         MOVLW   b'00010000'
00AC   0692           00310         XORWF   CURSOR_POS, 1
00AD   0008           00311 SKIP_HANDLE_UP_DOWN  RETURN     
                      00312         
                      00313         
                      00314 ; ***********************************************************************       DELAYS      ************
                            **********************************************************
                      00315         
                      00316 ; DELAYS: Causes a 1s delay, uses registers COUNT4, COUNT5 & COUNT6.
                      00317         
00AE   3000           00318 DELAYS  MOVLW   H'00'
00AF   0091           00319         MOVWF   COUNT6
00B0   0090           00320         MOVWF   COUNT5
00B1   3005           00321         MOVLW   0x5
00B2   008F           00322         MOVWF   COUNT4
                      00323         
00B3   0F91           00324 LOOP    INCFSZ  COUNT6,F
00B4   28B3           00325         GOTO    LOOP
00B5   0F90           00326         INCFSZ  COUNT5,F
00B6   28B3           00327         GOTO    LOOP
00B7   0B8F           00328         DECFSZ  COUNT4,F
00B8   28B3           00329         GOTO    LOOP
00B9   0008           00330         RETURN
                      00331         
                      00332 ; DELAYFMS: Causes a 40 ms delay, uses register COUNT1.
                      00333         
00BA   3025           00334 DELAYFMS        MOVLW   d'37'
00BB   008C           00335         MOVWF   COUNT1
00BC   20C0           00336 LOOP3   CALL    DELAYMS
00BD   0B8C           00337         DECFSZ  COUNT1,F
00BE   28BC           00338         GOTO    LOOP3
00BF   0008           00339         RETURN
                      00340 
                      00341 ; DELAYMS: Causes a 1 ms delay, uses registers COUNT2 & COUNT 3.
                      00342         
00C0   3000           00343 DELAYMS MOVLW d'0'          
00C1   008D           00344         MOVWF   COUNT2
00C2   304C           00345         MOVLW   d'76'
00C3   008E           00346         MOVWF   COUNT3
00C4   0F8D           00347 LOOP1   INCFSZ  COUNT2,F
00C5   28C4           00348         GOTO    LOOP1
00C6   0000           00349 LOOP2   NOP     
00C7   0B8E           00350         DECFSZ  COUNT3,F
00C8   28C6           00351         GOTO LOOP2
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  8
LCD

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C9   0008           00352         RETURN
                      00353 
                      00354         END
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE  9
LCD

SYMBOL TABLE
  LABEL                             VALUE 

ADDITIONAL                        00000015
C                                 00000000
CHAR_CODE                         00000013
CLEAR_SCREEN                      00000054
CONFIRM_BTN                       00000007
COUNT1                            0000000C
COUNT2                            0000000D
COUNT3                            0000000E
COUNT4                            0000000F
COUNT5                            00000010
COUNT6                            00000011
CURSOR_POS                        00000012
DC                                00000001
DELAYFMS                          000000BA
DELAYMS                           000000C0
DELAYS                            000000AE
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
ET                                0000005B
F                                 00000001
FINISH                            00000019
FLAG_REG                          00000014
FSR                               00000004
GIE                               00000007
HANDLE_UP_DOWN                    000000A9
INDF                              00000000
INDIRECT                          0000000E
INF                               00000053
INIT                              00000019
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
LEFT_BTN                          00000004
LOOP                              000000B3
LOOP1                             000000C4
LOOP2                             000000C6
LOOP3                             000000BC
LOOPX                             00000012
LOOPY                             00000015
LTR_0                             00000030
LTR_1                             00000030
LTR_2                             00000030
LTR_3                             00000030
LTR_4                             00000030
LTR_5                             00000030
LTR_6                             00000030
LTR_7                             00000030
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE 10
LCD

SYMBOL TABLE
  LABEL                             VALUE 

LTR_8                             00000030
LTR_9                             00000030
LTR_A                             00000041
LTR_ASTERISK                      0000002A
LTR_B                             00000042
LTR_C                             00000043
LTR_D                             00000044
LTR_E                             00000045
LTR_F                             00000046
LTR_G                             00000047
LTR_H                             00000048
LTR_I                             00000049
LTR_J                             0000004A
LTR_K                             0000004B
LTR_L                             0000004C
LTR_M                             0000004D
LTR_N                             0000004E
LTR_O                             0000004F
LTR_P                             00000050
LTR_Q                             00000051
LTR_R                             00000052
LTR_S                             00000053
LTR_SPACE                         000000A0
LTR_T                             00000054
LTR_U                             00000055
LTR_V                             00000056
LTR_W                             00000057
LTR_X                             00000058
LTR_Y                             00000059
LTR_Z                             0000005A
MAIN                              00000006
MAIN_MENU                         00000044
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PRINT_1                           00000095
PRINT_2                           00000098
PRINT_3                           0000009B
PRINT_A                           00000077
PRINT_ASTERISK                    0000008F
PRINT_D                           0000007A
PRINT_E                           0000007D
PRINT_G                           00000080
PRINT_M                           00000083
PRINT_O                           00000086
PRINT_R                           00000089
PRINT_SPACE                       00000092
PRINT_Y                           0000008C
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE 11
LCD

SYMBOL TABLE
  LABEL                             VALUE 

PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RB4_INT                           0000009E
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RIGHT_BTN                         00000005
RP0                               00000005
RP1                               00000006
SKIP_HANDLE_UP_DOWN               000000AD
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
UP_DOWN_BTN                       00000006
W                                 00000000
WELCOME_SCREEN                    00000035
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRITE_CHAR                        00000060
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001
__DEBUG                           1


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.35beta                          MAIN.ASM   4-15-2019  14:49:59         PAGE 12
LCD

MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXX------ ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   199
Program Memory Words Free:   825


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     3 reported,     0 suppressed

